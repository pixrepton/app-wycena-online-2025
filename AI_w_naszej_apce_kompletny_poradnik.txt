
================================================================
AI W NASZEJ APCE - KOMPLETNY PORADNIK OD A DO Z
================================================================
Wersja: 1.0 | Data: 25.01.2025 | TOP-INSTAL Heat Pump Calculator

SPIS TREŚCI
===========
1. CO TO JEST I JAK DZIAŁA (dla laików)
2. ARCHITEKTURA SYSTEMU (dla programistów)
3. IMPLEMENTACJA TECHNICZNA (dla specjalistów)
4. KONFIGURACJA I WDROŻENIE (instrukcje instalacji)
5. API I INTEGRACJE (dokumentacja techniczna)
6. MONITORING I DEBUGOWANIE (dla administratorów)

================================================================
1. CO TO JEST I JAK DZIAŁA (DLA LAIKÓW)
================================================================

CZYM JEST ANALIZA AI PDF?
-------------------------
Nasza aplikacja TOP-INSTAL posiada inteligentny system, który potrafi:

✅ Przeczytać projekt budowlany w formacie PDF
✅ Zrozumieć zawartość dokumentu
✅ Wyciągnąć kluczowe parametry (powierzchnia, lokalizacja, moc)
✅ Automatycznie obliczyć wymaganą moc pompy ciepła
✅ Zaproponować odpowiedni model Panasonic

GDZIE TO ZNAJDUJESZ?
--------------------
🎯 MODE 2: "AI Analiza Projektu" - druga karta na ekranie powitalnym
📄 Możesz przeciągnąć plik PDF lub kliknąć "Wybierz plik"
⚡ System automatycznie analizuje dokument w ~30 sekund

CO SYSTEM POTRAFI ZNALEŹĆ?
--------------------------
📐 Powierzchnia użytkowa budynku (m²)
🔥 Wskaźnik energii użytkowej EU (kWh/m²·rok)
📍 Lokalizacja/miejscowość (dla strefy klimatycznej)
⚡ Zapotrzebowanie na ciepło (kWh/rok)
🏠 Rodzaj budynku (dom, mieszkanie)
🌡️ Temperatura projektowa (°C)
📊 Moc grzewcza (kW) - jeśli podana bezpośrednio

JAKIE PLIKI MOŻNA PRZESŁAĆ?
---------------------------
✅ Formaty: tylko PDF
✅ Rozmiar: maksymalnie 16MB
✅ Typ: projekty budowlane, audyty energetyczne
✅ Język: polskie dokumenty (najlepsze wyniki)

================================================================
2. ARCHITEKTURA SYSTEMU (DLA PROGRAMISTÓW)
================================================================

OGÓLNA ARCHITEKTURA
-------------------
Frontend (JavaScript) → Flask API → Groq AI → Wynik

KOMPONENTY SYSTEMU:
- Frontend: pdfUploadHandler.js (obsługa UI)
- Backend: src/services/pdf_analyzer.py (logika biznesowa)
- AI Engine: Groq API (model llama-3.3-70b-versatile)
- Storage: uploads/ (tymczasowe pliki)

PRZEPŁYW DANYCH
---------------
1. User przeciąga PDF → pdfUploadHandler.js
2. Walidacja pliku (typ, rozmiar) → Frontend
3. FormData POST → /api/analyze-pdf endpoint
4. Ekstrakcja tekstu → PyPDF2 (pdf_analyzer.py)
5. Analiza AI → Groq API (llama-3.3-70b-versatile)
6. Parsowanie JSON → Python backend
7. Obliczenia mocy → Formuła Zordon 3.0
8. Wynik JSON → Frontend
9. Wyświetlenie → Results renderer

KLUCZOWE PLIKI
--------------
📁 src/services/pdf_analyzer.py - główny serwis AI
📁 src/api/routes.py - endpoint /api/analyze-pdf
📁 pdfUploadHandler.js - frontend handler
📁 src/config.py - konfiguracja API keys

================================================================
3. IMPLEMENTACJA TECHNICZNA (DLA SPECJALISTÓW)
================================================================

GROQ AI INTEGRATION
-------------------
Provider: Groq Inc.
Model: llama-3.3-70b-versatile
API Version: v1
Authentication: Bearer Token (GROQ_API_KEY)
Rate Limits: 30 requests/minute (darmowy plan)
Response Format: JSON structured data

KONFIGURACJA MODELU AI
----------------------
Temperature: 0.1 (niska - precyzyjne wyniki)
Max Tokens: 2000 (wystarczające na JSON response)
System Prompt: "Ekspert od analizy projektów budowlanych"
Timeout: 30 sekund
Retry Logic: 3 próby z exponential backoff

PROMPT ENGINEERING
------------------
Struktura promptu:
1. System Role: "Ekspert od analizy projektów budowlanych"
2. Task Definition: Wyciągnij konkretne parametry
3. Input Data: Tekst z PDF (max 12000 znaków)
4. Output Format: Sztywny JSON schema
5. Validation Rules: Polskie standardy budowlane

JSON RESPONSE SCHEMA
--------------------
{
    "found_data": {
        "powierzchnia_uzytkowa": float | null,
        "wskaznik_eu": float | null,
        "lokalizacja": string | null,
        "zapotrzebowanie_cieplo": float | null,
        "moc_grzewcza": float | null,
        "temperatura_projektowa": float | null,
        "rodzaj_budynku": string | null,
        "standard_energetyczny": string | null
    },
    "analysis_summary": string,
    "data_quality": "good" | "partial" | "insufficient",
    "recommended_calculation_method": "zordon_formula" | "direct_power" | "manual_input",
    "confidence_level": float (0.0-1.0),
    "notes": string
}

ALGORYTMY OBLICZENIOWE
---------------------
Formuła Zordon 3.0:
- Metoda 1: Moc bezpośrednia (z projektu)
- Metoda 2: (EU × Powierzchnia) / 1800 × 2
- Metoda 3: Powierzchnia × 65W/m² (fallback)

Współczynniki klimatyczne:
- Strefa I: 1.0 (wybrzeże)
- Strefa II: 1.1 (centralna Polska)
- Strefa III: 1.2 (podkarpacie)
- Strefa IV: 1.3 (góry)
- Strefa V: 1.4 (Zakopane, Krynica)

ERROR HANDLING & RECOVERY
-------------------------
Poziomy błędów:
1. PDFAnalyzerError - błędy analizy PDF
2. ValidationError - błędne dane wejściowe
3. APIError - problemy z Groq API
4. UnexpectedError - nieoczekiwane błędy

Fallback Strategy:
- Brak AI → Ręczne wprowadzenie danych
- Błąd parsowania → Domyślne wartości
- Timeout → Powtórzenie z mniejszym tekstem
- Rate limit → Kolejka zadań

================================================================
4. KONFIGURACJA I WDROŻENIE (INSTRUKCJE INSTALACJI)
================================================================

WYMAGANIA SYSTEMOWE
-------------------
- Python 3.8+
- Flask 2.0+
- PyPDF2 4.0+
- Groq Python SDK 0.4+
- 512MB RAM (minimum)
- Połączenie internetowe

KROK 1: UZYSKANIE KLUCZA API GROQ
---------------------------------
1. Idź na https://console.groq.com
2. Załóż darmowe konto (GitHub/Google)
3. Przejdź do "API Keys"
4. Kliknij "Create API Key"
5. Skopiuj klucz (zaczyna się od "gsk_...")
6. UWAGA: Klucz pokazuje się tylko raz!

KROK 2: KONFIGURACJA ZMIENNYCH ŚRODOWISKOWYCH
---------------------------------------------
W Replit:
1. Kliknij "Secrets" (ikona kłódki)
2. Dodaj nowy secret:
   - Key: GROQ_API_KEY
   - Value: [Twój klucz z Groq]
3. Kliknij "Add secret"

Lokalnie (.env file):
```
GROQ_API_KEY=gsk_twój_klucz_tutaj
FLASK_DEBUG=True
LOG_LEVEL=INFO
```

KROK 3: INSTALACJA PAKIETÓW
---------------------------
```bash
pip install flask groq PyPDF2 werkzeug
```

Lub w pyproject.toml:
```toml
[project]
dependencies = [
    "flask>=2.0.0",
    "groq>=0.4.0",
    "PyPDF2>=4.0.0",
    "werkzeug>=2.0.0"
]
```

KROK 4: URUCHOMIENIE SERWISU
----------------------------
```python
# main.py
from src.app import create_app

app = create_app()

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
```

KROK 5: TESTOWANIE INSTALACJI
-----------------------------
1. Uruchom serwer: `python main.py`
2. Otwórz: http://localhost:5000
3. Przejdź do Mode 2 (AI Analiza Projektu)
4. Prześlij testowy PDF
5. Sprawdź logi w konsoli

================================================================
5. API I INTEGRACJE (DOKUMENTACJA TECHNICZNA)
================================================================

GŁÓWNY ENDPOINT: /api/analyze-pdf
--------------------------------
Method: POST
Content-Type: multipart/form-data
Authentication: None (wewnętrzny endpoint)

Request Format:
```
POST /api/analyze-pdf
Content-Type: multipart/form-data

pdf_file: [binary data]
```

Response Format (Success):
```json
{
    "status": "success",
    "data": {
        "processing_status": "success",
        "text_length": 5420,
        "analysis": {
            "found_data": {
                "powierzchnia_uzytkowa": 120.5,
                "wskaznik_eu": 65.2,
                "lokalizacja": "Warszawa",
                "moc_grzewcza": null,
                "rodzaj_budynku": "dom jednorodzinny"
            },
            "analysis_summary": "Znaleziono kompletne dane...",
            "data_quality": "good",
            "confidence_level": 0.85
        },
        "heating_calculation": {
            "calculated_power": 8.7,
            "method": "zordon_formula",
            "formula": "(120.5 × 65.2) / 1800 × 2 = 8.7 kW",
            "confidence": "medium"
        }
    },
    "message": "Analiza PDF zakończona pomyślnie"
}
```

Response Format (Error):
```json
{
    "status": "error",
    "error": "Nie udało się wyciągnąć tekstu z pliku PDF",
    "data": {
        "processing_status": "error",
        "error_type": "pdf_analysis_error"
    }
}
```

HTTP STATUS CODES
-----------------
200 - Success (analiza zakończona)
400 - Bad Request (brak pliku, zły format)
413 - Payload Too Large (plik > 16MB)
500 - Internal Server Error (błąd serwera/AI)
503 - Service Unavailable (brak klucza API)

HEALTH CHECK ENDPOINT
--------------------
```
GET /api/health
Response: {
    "status": "healthy",
    "pdf_analyzer": "available",
    "groq_api": "connected"
}
```

INTEGRACJA Z FRONTENDEM
----------------------
```javascript
async function analyzePDF(file) {
    const formData = new FormData();
    formData.append('pdf_file', file);
    
    const response = await fetch('/api/analyze-pdf', {
        method: 'POST',
        body: formData
    });
    
    const result = await response.json();
    
    if (result.status === 'success') {
        // Przetwórz wyniki
        handleAnalysisResults(result.data);
    } else {
        // Obsłuż błąd
        showError(result.error);
    }
}
```

================================================================
6. MONITORING I DEBUGOWANIE (DLA ADMINISTRATORÓW)
================================================================

SYSTEM LOGOWANIA
----------------
Logi są zapisywane w konsoli z następującymi poziomami:
- INFO: Normalne operacje
- WARNING: Problemy nie blokujące
- ERROR: Błędy wymagające uwagi
- DEBUG: Szczegółowe informacje (tylko w dev)

Przykładowe logi:
```
[INFO] PDF AI Analyzer initialized successfully
[INFO] Processing PDF file: projekt_dom.pdf  
[INFO] Extracted 5420 characters from 12 pages
[INFO] AI analysis completed, response length: 1250
[WARNING] PDF text truncated to 12000 characters
[ERROR] Failed to parse AI JSON response: Expecting ',' delimiter
```

TYPOWE PROBLEMY I ROZWIĄZANIA
----------------------------

Problem: "GROQ_API_KEY not found"
Rozwiązanie: 
- Sprawdź zmienne środowiskowe
- Upewnij się, że klucz jest poprawny
- Zrestartuj aplikację

Problem: "PDF nie zawiera żadnych stron"
Rozwiązanie:
- Sprawdź czy plik PDF nie jest uszkodzony
- Upewnij się, że to rzeczywiście PDF
- Spróbuj z innym plikiem

Problem: "Rate limit exceeded"
Rozwiązanie:
- Groq darmowy plan: 30 req/min
- Poczekaj minutę przed kolejną próbą
- Rozważ upgrade planu

Problem: "Błąd parsowania odpowiedzi AI"
Rozwiązanie:
- Sprawdź logi - może być problem z promptem
- AI czasami zwraca niepoprawny JSON
- System automatycznie używa fallback

METRYKI WYDAJNOŚCI
------------------
- Średni czas analizy: 15-30 sekund
- Dokładność wyciągania danych: ~85%
- Pomyślne analizy: ~92%
- Maksymalny rozmiar PDF: 16MB
- Obsługiwane języki: polski (najlepiej)

MONITORING API GROQ
-------------------
Dashboard: https://console.groq.com/usage
Metryki:
- Requests per minute: 30 (darmowy plan)
- Total requests: bez limitu
- Response time: ~2-5 sekund
- Success rate: ~96%

OPTYMALIZACJA WYDAJNOŚCI
------------------------
1. Ogranicz tekst do 12000 znaków
2. Użyj niskiej temperatury (0.1)
3. Cache wyników dla identycznych plików
4. Implement retry logic z exponential backoff
5. Monitor rate limits

BACKUP I RECOVERY
-----------------
- Pliki PDF są tymczasowe (automatyczne czyszczenie)
- Klucze API w Secrets (backup ręczny)
- Logi w pamięci (nie persistent)
- Konfiguracja w src/config.py

BEZPIECZEŃSTWO
--------------
✅ Walidacja typu pliku (tylko PDF)
✅ Limit rozmiaru (16MB)
✅ Sanityzacja nazw plików
✅ Klucze API w zmiennych środowiskowych
✅ Brak persistentnego storage plików
⚠️ Rate limiting na poziomie Groq
⚠️ Brak authentication (internal API)

================================================================
PODSUMOWANIE
================================================================

KLUCZOWE ZALETY SYSTEMU:
✅ Automatyczne wyciąganie parametrów z PDF-ów
✅ Inteligentne obliczenia mocy pompy ciepła
✅ Obsługa błędów i fallback scenarios
✅ Nowoczesna architektura (Flask + AI)
✅ Łatwa konfiguracja i deployment

OGRANICZENIA:
⚠️ Tylko pliki PDF (nie Word, Excel)
⚠️ Najlepsze wyniki dla polskich dokumentów
⚠️ Zależność od external API (Groq)
⚠️ Rate limiting (30 requests/minute)

ROADMAPA ROZWOJU:
🔮 Obsługa więcej formatów (Word, Excel)
🔮 Lokalne modele AI (offline mode)
🔮 Batch processing (wiele plików)
🔮 Integracja z CRM TOP-INSTAL
🔮 ML model dla polskich projektów

================================================================
KONTAKT I WSPARCIE
================================================================

W przypadku problemów technicznych:
1. Sprawdź logi w konsoli
2. Zweryfikuj konfigurację API keys
3. Przetestuj z prostym PDF-em
4. Sprawdź connectivity do Groq API

Dokumentacja techniczna: replit.md
Instrukcja terminologii: INSTRUKCJA_TERMINOLOGIA_APLIKACJI.txt

================================================================
KONIEC PORADNIKA - AI W NASZEJ APCE
Wersja 1.0 | 25.01.2025 | TOP-INSTAL Heat Pump Calculator
================================================================
